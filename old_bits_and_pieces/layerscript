#!/bin/bash

n_min=${1:-2}       #n_min = minimal number of variables considered
n_max=${2:-16}      #n_max = maximal number of variables considered
n_step=${3:-2}      #n_step = step size between consecutive numbers of variables considered
nsim=${4:-5}        #nsim = number of random functions generated per considered number of variables
seed=${5:-0}        #seed = seed for both the random and numpy.random random number generator
EXACT_DEPTH=${6:-0} #EXACT_DEPTH == True (or 1)  -> k == exact number of canalizing variables;
                    #EXACT_DEPTH == False (or 0) -> k == minimal number of canalizing variables

mkdir -p input
python generate_test_functions_for_evaluation_of_run_time_v2.py $n_min $n_max $n_step $nsim $seed $EXACT_DEPTH NCF
python generate_test_functions_for_evaluation_of_run_time_v2.py $n_min $n_max $n_step $nsim $seed $EXACT_DEPTH kmin0
echo "step 1 completed: test files generated in /input"

mkdir -p output
M2 run_layers_script.m2 --silent -q -e 'findLayersI(("input/testfiles_poly_"|$n_min|"_"|$n_max|"_"|$n_step|"_NCF_"|$seed|".txt"), ("output/layers_"|$n_min|"_"|$n_max|"_"|$n_step|"_NCF_"|$seed|".txt"));exit 0'
M2 run_layers_script.m2 --silent -q -e 'findLayersI(("input/testfiles_poly_"|$n_min|"_"|$n_max|"_"|$n_step|"_kmin0_"|$seed|".txt"), ("output/layers_"|$n_min|"_"|$n_max|"_"|$n_step|"_kmin0_"|$seed|".txt"));exit 0'
echo "step 2 completed: Algorithm 1 (Macaulay2) output written to /output"

mkdir -p figures
python comparison_run_time.py $n_min $n_max $n_step $nsim $seed $EXACT_DEPTH
echo "step 3 completed: figures comparing the run time generated in /figures"








